
/**
 * Functions for adding payment information to PDF invoices
 */

import jsPDF from "jspdf";
import { 
  setupNormalTextStyle,
  setupSubheaderStyle,
  setupFooterStyle,
  setupBoldStyle,
  resetFontStyle
} from "../pdfStyles";

/**
 * Add payment information with improved formatting
 * Returns the updated Y position
 */
export const addPaymentInfo = (doc: jsPDF, bankName: string, accountName: string, accountNumber: string, swiftCode: string, yPos: number): number => {
  const leftMargin = 15;
  const rightMargin = doc.internal.pageSize.width - 15;
  
  // Add a section separator with more space
  doc.setDrawColor(220, 220, 220);
  doc.setLineWidth(0.5);
  doc.line(leftMargin, yPos, rightMargin, yPos);
  yPos += 15;
  
  // Add section header with decorative element
  doc.setFillColor(5, 209, 102);
  doc.rect(leftMargin, yPos - 5, 5, 20, 'F');
  
  setupSubheaderStyle(doc);
  setupBoldStyle(doc);
  doc.text("Bank Details", leftMargin + 15, yPos + 2);
  resetFontStyle(doc);
  yPos += 15;
  
  // Add a light background for the bank details with more padding
  const detailsHeight = 10 + (bankName ? 10 : 0) + (accountName ? 10 : 0) + 
                        (accountNumber ? 10 : 0) + (swiftCode ? 10 : 0);
  
  doc.setFillColor(248, 248, 248);
  doc.rect(leftMargin, yPos - 5, rightMargin - leftMargin, detailsHeight, 'F');
  
  // Add a subtle border around the box
  doc.setDrawColor(220, 220, 220);
  doc.setLineWidth(0.2);
  doc.rect(leftMargin, yPos - 5, rightMargin - leftMargin, detailsHeight);
  
  setupNormalTextStyle(doc);
  
  let labelX = leftMargin + 10;
  let valueX = leftMargin + 80;
  let currentY = yPos + 3;
  
  if (bankName) {
    setupBoldStyle(doc);
    doc.text("Bank Name:", labelX, currentY);
    resetFontStyle(doc);
    doc.text(bankName, valueX, currentY);
    currentY += 10;
  }
  
  if (accountName) {
    setupBoldStyle(doc);
    doc.text("Account Name:", labelX, currentY);
    resetFontStyle(doc);
    doc.text(accountName, valueX, currentY);
    currentY += 10;
  }
  
  if (accountNumber) {
    setupBoldStyle(doc);
    doc.text("Account Number:", labelX, currentY);
    resetFontStyle(doc);
    doc.text(accountNumber, valueX, currentY);
    currentY += 10;
  }
  
  if (swiftCode) {
    setupBoldStyle(doc);
    doc.text("Swift Code:", labelX, currentY);
    resetFontStyle(doc);
    doc.text(swiftCode, valueX, currentY);
    currentY += 10;
  }
  
  return currentY + 5;
};

/**
 * Add additional information section with improved styling
 * Returns the updated Y position
 */
export const addAdditionalInfo = (doc: jsPDF, additionalInfo: string, yPos: number): number => {
  if (!additionalInfo) return yPos;
  
  const leftMargin = 15;
  const rightMargin = doc.internal.pageSize.width - 15;
  
  // Add a section separator with better spacing
  doc.setDrawColor(220, 220, 220);
  doc.setLineWidth(0.5);
  doc.line(leftMargin, yPos, rightMargin, yPos);
  yPos += 15;
  
  // Add section header with decorative element
  doc.setFillColor(5, 209, 102);
  doc.rect(leftMargin, yPos - 5, 5, 20, 'F');
  
  setupSubheaderStyle(doc);
  setupBoldStyle(doc);
  doc.text("Additional Information", leftMargin + 15, yPos + 2);
  resetFontStyle(doc);
  yPos += 15;
  
  setupNormalTextStyle(doc);
  
  // Add a light background for the additional info with proper spacing
  // Calculate height based on text length
  const contentWidth = rightMargin - leftMargin - 20; // 10px padding on each side
  const textLines = doc.splitTextToSize(additionalInfo, contentWidth);
  const lineHeight = 6; // Approximate line height
  const textHeight = textLines.length * lineHeight + 10; // 5px padding top and bottom
  
  doc.setFillColor(248, 248, 248);
  doc.rect(leftMargin, yPos - 5, rightMargin - leftMargin, textHeight, 'F');
  
  // Add a subtle border around the box
  doc.setDrawColor(220, 220, 220);
  doc.setLineWidth(0.2);
  doc.rect(leftMargin, yPos - 5, rightMargin - leftMargin, textHeight);
  
  // Split long text into multiple lines with proper formatting and padding
  doc.text(textLines, leftMargin + 10, yPos + 3);
  
  return yPos + textHeight + 5;
};

/**
 * Add footer with thank you message and improved styling
 */
export const addFooter = (doc: jsPDF) => {
  const pageWidth = doc.internal.pageSize.width;
  const pageHeight = doc.internal.pageSize.height;
  
  // Add a decorative footer bar
  doc.setFillColor(5, 209, 102);
  doc.rect(pageWidth / 2 - 60, pageHeight - 20, 120, 1, 'F');
  
  setupFooterStyle(doc);
  doc.text("Thank you for your business!", pageWidth / 2, pageHeight - 15, { align: "center" });
  
  // Add a powered by message
  doc.setFontSize(8);
  doc.text("Generated by DigitBooks Invoice System", pageWidth / 2, pageHeight - 10, { align: "center" });
};
