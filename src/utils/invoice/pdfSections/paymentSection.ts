
/**
 * Functions for adding payment information to PDF invoices
 */

import jsPDF from "jspdf";
import { 
  setupNormalTextStyle,
  setupSubheaderStyle,
  setupFooterStyle,
  setupBoldStyle,
  resetFontStyle
} from "../pdfStyles";

/**
 * Add payment information with improved formatting
 * Returns the updated Y position
 */
export const addPaymentInfo = (doc: jsPDF, bankName: string, accountName: string, accountNumber: string, swiftCode: string, yPos: number): number => {
  const leftMargin = 15;
  const rightMargin = doc.internal.pageSize.width - 15;
  
  // Add a section separator
  doc.setDrawColor(220, 220, 220);
  doc.setLineWidth(0.5);
  doc.line(leftMargin, yPos, rightMargin, yPos);
  yPos += 10;
  
  // Add section header with decorative element
  doc.setFillColor(5, 209, 102);
  doc.rect(leftMargin, yPos - 5, 3, 15, 'F');
  
  setupSubheaderStyle(doc);
  setupBoldStyle(doc);
  doc.text("Bank Details", leftMargin + 10, yPos);
  resetFontStyle(doc);
  yPos += 10;
  
  // Add a light background for the bank details
  doc.setFillColor(248, 248, 248);
  doc.rect(leftMargin, yPos - 5, rightMargin - leftMargin, bankName && accountName && accountNumber ? 35 : 15, 'F');
  
  setupNormalTextStyle(doc);
  
  if (bankName) {
    setupBoldStyle(doc);
    doc.text("Bank Name:", leftMargin + 5, yPos);
    resetFontStyle(doc);
    doc.text(bankName, leftMargin + 80, yPos);
    yPos += 8;
  }
  
  if (accountName) {
    setupBoldStyle(doc);
    doc.text("Account Name:", leftMargin + 5, yPos);
    resetFontStyle(doc);
    doc.text(accountName, leftMargin + 80, yPos);
    yPos += 8;
  }
  
  if (accountNumber) {
    setupBoldStyle(doc);
    doc.text("Account Number:", leftMargin + 5, yPos);
    resetFontStyle(doc);
    doc.text(accountNumber, leftMargin + 80, yPos);
    yPos += 8;
  }
  
  if (swiftCode) {
    setupBoldStyle(doc);
    doc.text("Swift Code:", leftMargin + 5, yPos);
    resetFontStyle(doc);
    doc.text(swiftCode, leftMargin + 80, yPos);
    yPos += 8;
  }
  
  return yPos + 5;
};

/**
 * Add additional information section with improved styling
 * Returns the updated Y position
 */
export const addAdditionalInfo = (doc: jsPDF, additionalInfo: string, yPos: number): number => {
  if (!additionalInfo) return yPos;
  
  const leftMargin = 15;
  const rightMargin = doc.internal.pageSize.width - 15;
  
  // Add a section separator
  doc.setDrawColor(220, 220, 220);
  doc.setLineWidth(0.5);
  doc.line(leftMargin, yPos, rightMargin, yPos);
  yPos += 10;
  
  // Add section header with decorative element
  doc.setFillColor(5, 209, 102);
  doc.rect(leftMargin, yPos - 5, 3, 15, 'F');
  
  setupSubheaderStyle(doc);
  setupBoldStyle(doc);
  doc.text("Additional Information", leftMargin + 10, yPos);
  resetFontStyle(doc);
  yPos += 10;
  
  setupNormalTextStyle(doc);
  
  // Add a light background for the additional info
  doc.setFillColor(248, 248, 248);
  doc.rect(leftMargin, yPos - 5, rightMargin - leftMargin, 20, 'F');
  
  // Split long text into multiple lines with proper formatting
  const textLines = doc.splitTextToSize(additionalInfo, rightMargin - leftMargin - 10);
  doc.text(textLines, leftMargin + 5, yPos);
  
  return yPos + (textLines.length * 7) + 5;
};

/**
 * Add footer with thank you message and improved styling
 */
export const addFooter = (doc: jsPDF) => {
  const pageWidth = doc.internal.pageSize.width;
  const pageHeight = doc.internal.pageSize.height;
  
  // Add a decorative footer bar
  doc.setFillColor(5, 209, 102);
  doc.rect(pageWidth / 2 - 50, pageHeight - 20, 100, 1, 'F');
  
  setupFooterStyle(doc);
  doc.text("Thank you for your business!", pageWidth / 2, pageHeight - 15, { align: "center" });
  
  // Add a powered by message
  doc.setFontSize(8);
  doc.text("Generated by DigitBooks Invoice System", pageWidth / 2, pageHeight - 10, { align: "center" });
};
